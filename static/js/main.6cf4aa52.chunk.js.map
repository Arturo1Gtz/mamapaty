{"version":3,"sources":["components/front-page/front-page.component.jsx","components/page-one/page-one.component.jsx","components/page-two/page-two.component.jsx","components/page-three/page-three.component.jsx","components/page-four/page-four.component.jsx","components/page-five/page-five.component.jsx","App.js","serviceWorker.js","index.js"],"names":["FrontPage","props","className","onClick","cambioFondo","PageOne","PageTwo","PageThree","PageFour","PageFive","App","setState","parrafo","state","console","log","cambioFront","param","this","renderSwitch","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6WAGaA,G,MAAY,SAACC,GACtB,OACK,yBAAKC,UAAU,iDACZ,uCACA,wBAAIC,QAASF,EAAMG,aAAnB,YCJCC,G,MAAU,SAACJ,GACpB,OAAO,yBAAKC,UAAU,aACV,wBAAIA,UAAU,qCAAd,iCAC8B,0BAAMA,UAAU,WAAWC,QAASF,EAAMG,aAA1C,WAD9B,mECFHE,G,MAAU,SAACL,GACpB,OAAO,yBAAKC,UAAU,aACV,wBAAIA,UAAU,qCAAd,iHAC2G,0BAAMA,UAAU,eAAeC,QAASF,EAAMG,aAA9C,eAD3G,sDCFHG,G,MAAY,SAACN,GACtB,OAAO,yBAAKC,UAAU,aACV,wBAAKA,UAAU,qCAAf,6CAC0C,0BAAMA,UAAU,iBAAiBC,QAASF,EAAMG,aAAhD,cAD1C,qHCFHI,G,MAAW,SAACP,GACrB,OAAO,yBAAKC,UAAU,aACV,wBAAKA,UAAU,qCAAf,0DACuD,0BAAMA,UAAU,gBAAgBC,QAASF,EAAMG,aAA/C,WADvD,kCCFHK,G,MAAW,SAACR,GACrB,OAAO,yBAAKC,UAAU,aACV,wBAAKA,UAAU,qCAAf,yEAEmB,0BAAMA,UAAU,gBAAgBC,QAASF,EAAMG,aAA/C,cCgDpBM,G,wDA5Cb,aAAc,IAAD,8BACX,gBAMFN,YAAc,WACZ,EAAKO,SAAS,CAACC,QAAS,EAAKC,MAAMD,QAAU,IAAG,kBAAIE,QAAQC,IAAI,EAAKF,WAR1D,EAUbG,YAAa,WACX,EAAKL,SAAS,CAACC,QAAS,KATxB,EAAKC,MAAO,CACVD,QAAS,GAHA,E,yDAcAK,GACX,OAAOA,GACL,KAAK,EACH,OAAO,kBAAC,EAAD,CAAWb,YAAac,KAAKd,cAEtC,KAAK,EACH,OAAO,kBAAC,EAAD,CAASA,YAAac,KAAKd,cACpC,KAAK,EACH,OAAO,kBAAC,EAAD,CAASA,YAAac,KAAKd,cACpC,KAAK,EACH,OAAO,kBAAC,EAAD,CAAWA,YAAac,KAAKd,cACtC,KAAK,EACH,OAAO,kBAAC,EAAD,CAAUA,YAAac,KAAKd,cACrC,KAAK,EACH,OAAO,kBAAC,EAAD,CAAUA,YAAac,KAAKF,iB,+BAMvC,OACE,yBAAKd,UAAU,OACbgB,KAAKC,aAAaD,KAAKL,MAAMD,c,GArCnBQ,IAAMC,YCEJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,c","file":"static/js/main.6cf4aa52.chunk.js","sourcesContent":["import React from 'react';\r\nimport './front-page.style.css'\r\n\r\nexport const FrontPage = (props) =>{\r\n    return(\r\n         <div className=\"Page front  animate__animated animate__fadeIn\"> \r\n            <h3>Querida</h3>\r\n            <h1 onClick={props.cambioFondo}>MADRE</h1>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport './page-one.style.css';\r\n\r\nexport const PageOne = (props) =>{\r\n    return <div className=\"Page big1\">\r\n                <h2 className=\"animate__animated animate__fadeIn\">\r\n                Quisiera poder darte todo los <span className=\"especial\" onClick={props.cambioFondo}>regalos</span> del mundo pero eres tú lo que me lo da día a  día. \r\n                </h2>\r\n            </div>\r\n};","import React from 'react';\r\nimport './page-two.style.css';\r\n\r\nexport const PageTwo = (props) =>{\r\n    return <div className=\"Page big2\">\r\n                <h2 className=\"animate__animated animate__fadeIn\">\r\n                Cada momento contigo es un regalo para mí cada momento de risa e incluso de tristeza ha sido igualmente de <span className=\"especial two\" onClick={props.cambioFondo}>maravilloso</span> y no cambiaría  ninguno por nada del mundo. \r\n                </h2>\r\n            </div>\r\n};","import React from 'react';\r\nimport './page-three.style.css'\r\n\r\nexport const PageThree = (props) =>{\r\n    return <div className=\"Page big3\">\r\n                <h2  className=\"animate__animated animate__fadeIn\">\r\n                Por eso quiero corresponderte para que tu <span className=\"especial three\" onClick={props.cambioFondo}>corazón</span> también reciba todo el amor con el que tú nos has recibido desde el primer momento en que nos sentiste.\r\n                </h2>\r\n            </div>\r\n};","import React from 'react';\r\nimport './page-four.style.css'\r\n\r\nexport const PageFour = (props) =>{\r\n    return <div className=\"Page big4\">\r\n                <h2  className=\"animate__animated animate__fadeIn\">\r\n                Disfruto mucho estar a tu lado, cuando me regalas una  <span className=\"especial four\" onClick={props.cambioFondo}>sonrisa</span> cuando más lo necesito.\r\n                </h2>\r\n            </div>\r\n};","import React from 'react';\r\nimport './page-five.style.css'\r\n\r\nexport const PageFive = (props) =>{\r\n    return <div className=\"Page big5\">\r\n                <h2  className=\"animate__animated animate__fadeIn\">\r\n                Tú eres mi mayor tesoro, mi guía y mi  todo. \r\n                Gracias por ser mi <span className=\"especial five\" onClick={props.cambioFondo}>madre.</span> \r\n                </h2>\r\n            </div>\r\n};","import React from 'react';\nimport {FrontPage} from './components/front-page/front-page.component'\nimport {PageOne} from './components/page-one/page-one.component'\nimport {PageTwo} from './components/page-two/page-two.component'\nimport {PageThree} from './components/page-three/page-three.component'\nimport {PageFour} from './components/page-four/page-four.component'\nimport {PageFive} from './components/page-five/page-five.component'\n\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      parrafo: 0\n    }\n  }\n  \n  cambioFondo = () =>{\n    this.setState({parrafo: this.state.parrafo + 1},()=>console.log(this.state))\n  }\n  cambioFront =() =>{\n    this.setState({parrafo: 0})\n  }\n\n  renderSwitch(param){\n    switch(param){\n      case 0:\n        return <FrontPage cambioFondo={this.cambioFondo} />;\n     \n      case 1:\n        return <PageOne cambioFondo={this.cambioFondo}/>;\n      case 2:\n        return <PageTwo cambioFondo={this.cambioFondo}/>;\n      case 3:\n        return <PageThree cambioFondo={this.cambioFondo}/>;\n      case 4:\n        return <PageFour cambioFondo={this.cambioFondo}/>;\n      case 5:\n        return <PageFive cambioFondo={this.cambioFront}/>;\n\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"App\" >\n      { this.renderSwitch(this.state.parrafo)}   \n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}